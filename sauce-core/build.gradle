apply plugin: 'java'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0x'
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

//configurations {
//    provided
//}
//
////sourceSets {
////    main {
////        compileClasspath += configurations.provided
////    }
////}

dependencies {
    testCompile 'junit:junit:4.11'
    testCompile 'org.assertj:assertj-core:1.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.1.2'
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    options.encoding = "UTF-8"
}

task javadocsJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

artifacts {
    archives javadocsJar
    archives sourcesJar
}

//maven central
apply from: '../maven_publish.gradle'

// jacoco start
apply plugin: 'jacoco'

jacoco {
    toolVersion "0.7.1.201405082137"
}

jacocoTestReport {
    classDirectories = fileTree(
            dir: "${buildDir}/classes/main",
            exclude: [
                    '**/R*.class',
                    '**/BuildConfig*',
                    '**/*$*.class',
                    '**/*$*.java']
    )
    additionalSourceDirs = files([
            "src/main/java"
    ])

    executionData = files("${buildDir}/jacoco/test.exec")

    reports {
        xml.enabled = true
        csv.enabled = true
        xml {
            destination "${buildDir}/reports/jacoco/${project.name}/jacocoTestReport.xml"
        }
        html {
            destination "${buildDir}/reports/jacoco/${project.name}"
        }
    }
}
// jacoco end
